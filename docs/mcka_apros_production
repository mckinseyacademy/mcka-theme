server {
    listen 80;

    server_name lms.mcka.local;

    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header "Access-Control-Allow-Credentials" "true";
        add_header "Access-Control-Allow-Origin" "http://apros.mcka.local";
        add_header "Access-Control-Allow-Headers" "X-CSRFToken,X-Requested-With,Keep-Alive,User-Agent,If-Modified-Since,Cache-Control,Content-Type,DNT,X-Mx-ReqToken";
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}

server {
  listen 80;
  server_name apros.mcka.local;
  merge_slashes off;
  client_max_body_size 20M;


  proxy_intercept_errors on;

  location / {
    if (-f /edx/app/apros/mcka_apros/maintenance.lock) {
        return 503;
    }

    try_files $uri @proxy_to_appros;
  }

  if ($args !~ "ajax=1") {
      rewrite ^/courses/([^/]+)/([^/]+)/([^/]+)/discussion/forum/([^/]+/threads/[^/]+)/?$ https://$host/courses/slashes:$1+$2+$3/discussion/$4 redirect;
  }

  location ~ ^/courses/.*/discussion/forum/users/\d+/?$ {
    try_files $uri @proxy_to_appros;
  }

  #shortcut course discussion backbone navigation to apros
  location ~ "^/courses/.*/discussion/[\w\-]+/threads/[0-9a-f]{24}/?$" {
    try_files $uri @proxy_to_appros;
  }

  # XBlock content from LMS

  location /api/ {
    try_files $uri @proxy_to_lms_app;
  }

  location /auth/ {
    try_files $uri @proxy_to_lms_app;
  }

  location /heartbeat {
    try_files $uri @proxy_to_appros;
  }

  location /mcka-api/ {
    try_files $uri @proxy_to_appros;
  }

  #pass xblocks through to the LMS

  location /xblock/resource/ {
    try_files $uri @proxy_to_lms_app;
  }

  location ~ ^/courses/.*/xblock/ {
    try_files $uri @proxy_to_lms_app;
  }

  #pass discussions through to the LMS
  location ~ ^/courses/.*/discussion/ {
    try_files $uri @proxy_to_lms_app;
  }

  location /notification_prefs/ {
    try_files $uri @proxy_to_lms_app;
  }

  location /c4x/ {
    try_files $uri @proxy_to_lms_app;
  }

  # pass requests for course uploads to the LMS

  location /assets/courseware/v1/ {
    try_files $uri @proxy_to_lms_app;
  }

  # serve generated static content from cache

  location ~ /static/(?P<file>.*) {
    root /edx/app/apros/mcka_apros;
    try_files /static_cache/$file /static/$file @proxy_to_lms_nginx;
  }

  # Needed for mobile SSO-based auth to work
  location /oauth2/ {
    try_files $uri @proxy_to_lms_app;
  }

  location @proxy_to_lms_nginx {
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
    proxy_set_header X-Forwarded-For $http_x_forwarded_for;
    proxy_set_header Host $http_host;

    proxy_redirect off;
    proxy_pass http://localhost:8000;
  }

  location @proxy_to_lms_app {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $http_host;

    proxy_redirect off;
    proxy_pass http://localhost:8000;
   }

  location @proxy_to_appros {
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
    proxy_set_header X-Forwarded-For $http_x_forwarded_for;
    proxy_set_header Host $http_host;

    proxy_redirect off;
    proxy_pass http://localhost:3000;

    if ($host ~* beta\.(.*)) {
      set $www_host www.$1;
      rewrite ^(.*)$ https://$www_host$1 permanent;
    }

    # Forward to HTTPS if we're an HTTP request...
    if ($http_x_forwarded_proto = "http") {
      set $do_redirect "true";
    }

    # Run our actual redirect...
    if ($do_redirect = "true") {
      rewrite ^ https://$host$request_uri? permanent;
    }
  }
}
