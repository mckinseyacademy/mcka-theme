- extends "layout.haml"

- block page_title
  %title= _("Login | McKinsey Academy")

- block header
  - include 'accounts/login_header.haml'
- load staticfiles
- block content
  .row
    .login-form.large-10.medium-10.large-centered.medium-centered.columns
      - if request.is_IE8
        %br
        .outdated_browser
          = _("We're sorry, McKinsey Academy is not compatible with your browser. You will not be able to access course content without updating your browser. We recommend the latest versions of Google Chrome, Mozilla Firefox, and Apple Safari for an optimal experience.")
      - else
        .row
          .large-7.medium-7.columns
            %h1 Please log in
            .description
              %span Required fields are noted by an asterisk (
              %span.required-field><
              %span ).
              %span.login-mode-selector
                %span McKinsey & Co. users <a href="#">click here</a>.
            %form.normal-login{action: "/accounts/login/", method: "POST"}
              .error
                - if error
                  = error
              - csrf_token
              = form
              %a{"data-reveal-id": "reset-password", "data-reveal-ajax": "true", href: "/accounts/password/reset/"}
                Forgot password?
              %br
              %br
              %br
              %input.button.radius.small{type: "submit", value: "#{login_label}"}
            %form.sso-login{action: "/accounts/login/", method: "POST"}
              .error
                - if error
                  = error
              - csrf_token
              = sso_login_form
              %br
              %br
              %br
              %input.button.radius.small{type: "submit", value: "#{login_label}"}
          .large-3.medium-3.columns
            %h4 Need Help?
            .sidebar
              %a{href: "/faq"} View our FAQ for answers to commonly asked questions.

  #reset-password.reveal-modal.small{"data-reveal": "true"}

  - block general_modal
    %a.reveal-general-modal{'href': "#", 'data-reveal-id': "generalModal"}
    .reveal-modal.small{'id': "generalModal", 'data-reveal': ''}
      - if form.reset == 'done'
        - include 'registration/password_reset_done.haml'
        %input.show-modal{'type': 'hidden', 'value': 'autoshow'}
      - if form.reset == 'complete'
        - include 'registration/password_reset_complete.haml'
        %input.show-modal{'type': 'hidden', 'value': 'autoshow'}
      - if form.reset == 'failed'
        - include 'registration/password_reset_failed.haml'
        %input.show-modal{'type': 'hidden', 'value': 'autoshow'}

- block js_snippets
  %script{src: "{% static 'js/ajaxify_overlay_form.js' %}"}
  %script{src: "{% static 'js/vendor/jquery.query-object.js' %}"}
  :javascript
    ajaxify_overlay_form('#reset-password', 'form');
    $('form input[type="text"]').on('keypress', function(){
      $('.error').text('');
    });
    $(function(){
      var current_mode = "{{login_mode}}";
      if($('#generalModal input.show-modal').length > 0){
        $('#generalModal').foundation('reveal', 'open');
      }

      function switchToMode(mode) {
        current_mode = mode;
        $("form.normal-login, form.sso-login").hide();
        $("span.login-mode-label").hide();
        $("form."+mode+"-login").show();
        $("span.login-mode-label.mode-"+mode).show();
      }

      $(".login-mode-selector a").click(function(ev) {
        ev.preventDefault();
        current_mode = (current_mode != 'normal') ? 'normal' : 'sso';
        switchToMode(current_mode);
      });

      // Preserve hash value in ?next= argument
      if(window.location.hash !== ''){
        var hash = window.location.hash.substr(1);
        if(hash.indexOf('forgot-password-modal') > -1){
          $('a[data-reveal-id="reset-password"]').click();
          window.location.hash = hash.replace('forgot-password-modal', '');
        }
        else {
          var next_with_hash = $.query.get('next') + window.location.hash,
              query_with_hash = $.query.set('next', next_with_hash).toString();
          window.history.replaceState({}, '', query_with_hash);
        }
      }

      switchToMode(current_mode);
    })
