#over-full-calendar
  #row-full-calendar
    .row
      .large-12        
        #over-calendar-left{style: "width: 80px;height: 290px;position: absolute;background-color: white;padding-top: 25px;background-color:white;z-index:221;"}
          %span#previous-calendar.fa.fa-angle-left
        #over-calendar-right{style: "margin-left: 1020px; width: 80px;height: 290px;position: absolute;background-color: white;padding-top: 25px;background-color:white;z-index:221;"}
          %span#next-calendar.fa.fa-angle-right
        #under-calendar
          %span#close-calendar.fa.fa-times-circle
          %ul.tab-month
            %li.head-month
              %span.month
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first.last
            %li.second.last
          %ul.tab-month
            %li.head-month
              %span.month
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first.last
            %li.second.last
          %ul.tab-month
            %li.head-month
              %span.month
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first.last
            %li.second.last
          %ul.tab-month
            %li.head-month
              %span.month
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first
            %li.second
            %li.first.last
            %li.second.last
          %ul.legend-list
            %li.light-gray-legend
              %i.fa.fa-circle
              not available
            %li.gray-legend
              %i.fa.fa-circle
              not started
            %li.light-green-legend
              %i.fa.fa-circle
              in progress
            %li.green-legend
              %i.fa.fa-circle
              complete
            %li.red-legend
              %i.fa.fa-circle
              incomplete
            %li.teal-legend
              %i.fa.fa-circle
              not tracked

        #highcharts-container


%script
  var milestones = {{milestones|safe}} ? {{milestones|safe}}: [];
  var dates = {{dates|safe}} ? {{dates|safe}}: [];
  var courses = {{courses|safe}} ? {{courses|safe}}: [];

  var dataIPS = [];
  var dataWeb = [];
  var dataDig = [];
  var dateList = [];
  var dataCourses = [];

  var minDate;
  var maxDate;

  var mlist = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];

  for (var i=0; i < 5; i++) {
    dateList.push(
      Date.UTC((new Date(dates[i])).getUTCFullYear(), (new Date(dates[i])).getUTCMonth())
    );
  }

  addMonthNames(dates);
  dateList.push(dateList[4] + 86400 * 9 * 1000);
  dateList.unshift(dateList[0] - 86400 * 9 * 1000);

  minDate = dateList[1];
  maxDate = dateList[5];

  for (var j=0 in courses){
    dataCourses.push({
      color: '#e0e0e0',
      x: 1,
      label: "Course",
      name: courses[j].name,
      link: courses[j].link,
      user_progress: ("Your progress: " + courses[j].user_progress + "%"),
      cohort_progress: ("Cohort progress: " + courses[j].cohort_progress + "%"),
      low: (Date.parse(courses[j].start)).getTime(),
      high: (Date.parse(courses[j].end)).getTime(),
    });

    if (dataCourses[j].start < minDate)
      minDate = dataCourses[j].start
    if (dataCourses[j].end > maxDate)
      maxDate = dataCourses[j].end
  }

  var low;
  var high;
  for (var i=0 in milestones) {

    low = (Date.parse(milestones[i]["fields"].start_date)).getTime();
    high = (Date.parse(milestones[i]["fields"].end_date)).getTime();

    if (low < minDate)
      minDate = low;
    if (high > maxDate)
      maxDate = high;

    if (milestones[i]["fields"].milestone_type == "1") {
      dataIPS.push({
        color: '#e0e0e0',
        x: 0,
        label: milestones[i]["fields"].label,
        name: milestones[i]["fields"].title,
        location: milestones[i]["fields"].location,
        details: milestones[i]["fields"].details,
        link: milestones[i]["fields"].link,
        low: low,
        high: high
      });
    }

    if (milestones[i]["fields"].milestone_type == "2") {
      dataWeb.push({
        color: '#e0e0e0',
        x: 2,
        label: milestones[i]["fields"].label,
        name: milestones[i]["fields"].title,
        link: milestones[i]["fields"].link,
        details: milestones[i]["fields"].details,
        link: milestones[i]["fields"].link,
        low: low,
        high: high
      });
    }

    if (milestones[i]["fields"].milestone_type == "3") {
      dataDig.push({
        color: '#e0e0e0',
        x: 3,
        label: milestones[i]["fields"].label,
        name: milestones[i]["fields"].title,
        link: milestones[i]["fields"].link,
        low: low,
        high: high
      });
    }
  }

  $('#close-calendar').click(function() {
    $('#replace-calendar').empty();
    opened = false;
  });

  $('#next-calendar').click(function() {
    if (maxDate > dateList[5])
      moveCalendarDates(4);
  });

  $('#previous-calendar').click(function() {
    if (minDate < dateList[1])
      moveCalendarDates(-4);
  });

  function moveCalendarDates(moveMonth) {
    var chart = $('#highcharts-container').highcharts();
    extremes = chart.yAxis[0].getExtremes();

    var minDate = new Date(extremes.min + 86400 * 9 *1000);
    minDate = minDate.setUTCMonth((minDate).getUTCMonth() + moveMonth);

    extremes.min = Date.UTC((new Date(minDate)).getUTCFullYear(), (new Date(minDate)).getUTCMonth());
    extremes.max = Date.UTC((new Date(minDate)).getUTCFullYear(), (new Date(minDate)).getUTCMonth() + 4);

    dateList = [];
    for (var i=0; i < 5; i++) {
      dateList.push(
        Date.UTC((new Date(minDate)).getUTCFullYear(), (new Date(minDate)).getUTCMonth() + i)
      );
    }

    addMonthNames( dateList );

    dateList.push(dateList[4] + 86400 * 9 * 1000);
    dateList.unshift(dateList[0] - 86400 * 9 * 1000);

    chart.yAxis[0].options.tickInterval = dateList;
    chart.yAxis[0].isDirty = true;

    chart.yAxis[0].setExtremes(extremes.min, extremes.max);
  }

  function addMonthNames( dateList ) {
    $( ".month" ).each(function( index ) {
      $( this ).parent().removeClass( "active" );
      $( this ).html( mlist[new Date(dateList[index]).getMonth()] );

      if ( ((new Date(dateList[index])).getMonth()) == (new Date()).getMonth() && ((new Date(dateList[index + 1])).getYear()) == (new Date()).getYear())
        $( this ).parent().addClass( "active" );
    });
  }

%script{src: "/static/js/learner_dashboard_calendar_highcharts.js"}
