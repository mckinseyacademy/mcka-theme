- extends 'admin/admin_layout.haml'
- load staticfiles
  -# CSS
  - block css
    %link{rel: "stylesheet", href: "{% static 'css/normalize.css' %}"}
    %link{rel: "stylesheet", href: "{% static 'css/font-awesome.css' %}"}
    %link{rel: "stylesheet", href: "{% static 'css/leaflet.css' %}"}
    %link{rel: "stylesheet", href: "{% static 'css/nv.d3.css' %}"}
- block content
  .admin-detail.row
    .large-12.large.columns
      - include 'admin/workgroup/detail_header.haml'
  .admin-list.tight
    .admin-detail.row
      .large-12.large-centered.columns
        %header
          %h1.principal-title Group Work: {{course.name}}
          .sub-1.add= _("Review Assignments for Project Activities")
          .add-message
            - block principal_message
              %p= _("Generate random peer-reviews for project activities")
          %div
            %a{href: "/admin/workgroup/course/#{course.id}/download_group_projects_report", target: "_blank"}
              Workgroup Completion Report
        %hr
        %section
          .sub-1= _("Project:")
          %p= _("Select project within which you are working")
          - include 'admin/workgroup/project_dropdown.haml'
        %hr
        %section
          - for group_project in group_projects
            .project_activities_detail{"data-project-id": "#{group_project.id}"}
              - for activity in group_project.activities
                .activity
                  .name
                    = _("Activity: ")
                    = activity.name
                    - if activity.has_assignments
                      %span.assignment_message><
                        = _("has assignments")
                  - if activity.xblock.ta_graded
                    .detail.ta-graded
                      = _("This activity is to be graded by a Teaching Assistant")
                  - else
                    .detail
                      %table
                        %tr
                          %td
                            = _("Reviews required per group activity")
                          %td
                            = activity.xblock.group_reviews_required_count
                        %tr
                          %td
                            = _("Minimum number of reviews for each user")
                          %td
                            = activity.xblock.user_review_count
                      %a.show_generate_options.button.radius.small{href: "#", "data-reveal-id": "generate-reviews-modal", "data-activity-id": "#{activity.js_safe_id}"}
                        = _("Generate Activity Review Assignments")
                      .generation-submission{"data-activity-id": "#{activity.js_safe_id}"}
                        .close-reveal-modal
                          %i.fa.fa-times-circle
                        %form.generate_assignment_form{action: "/admin/project/#{group_project.id}/activity/#{activity.id}/generate_assignments", method: "POST"}
                          - csrf_token
                          %h2
                            Generate Activity Review Assignments for
                            = activity.name
                          .error
                            = _("When you click on 'Confirm' below you will be assigning reviewers to existing group data. Please be sure that you are ready to do this at this time.")
                          - if activity.has_assignments
                            %input.delete-choice{type: "checkbox", name: "delete_choice", checked: "checked", id: "delete_choice_#{activity.js_safe_id}"}
                            %label.delete-label{"for": "delete_choice_#{activity.js_safe_id}"}
                              = _("Delete existing review assignments")
                          %div
                            %input.button.radius.tiny{type: "submit", value: "Confirm"}
                        .informational-message

  #generate-reviews-modal.reveal-modal{"data-reveal": "true"}

- block js_snippets
  :javascript
    var show_activities_for_project = function(project_id){
      var project_activities = $('.project_activities_detail').hide();
      project_activities.filter('[data-project-id="' + project_id + '"]').show();
    }
    $('.group-project-select').on('change', function(){
      show_activities_for_project($(this).val());
    });
    $('.show_generate_options').on('click', function(){
      var activity_id = $(this).data('activity-id');
      var form_copy = $('.activity .detail .generation-submission[data-activity-id=' + activity_id + ']').clone(true);
      var delete_field = form_copy.find('.delete-choice');
      if(delete_field.length > 0){
        var new_id = delete_field.attr('id').replace('delete_choice_', '');
        delete_field.attr('id', new_id);
        form_copy.find('.delete-label').attr('for', new_id);
      }
      $('#generate-reviews-modal').empty().append(form_copy);
      $('#generate-reviews-modal .informational-message').empty();
    });
    $('#generate-reviews-modal').on('submit', 'form', function(e) {
      e.preventDefault();
      var form = $(this);
      form.find(':submit').prop('disabled', true);
      $.ajax({
        method: 'POST',
        url: form.attr('action'),
        data: form.serialize()
      })
      .done(function(data, status, xhr) {
        var contentType = xhr.getResponseHeader('content-type') || '';
        if (contentType.indexOf('json') > -1 && data.message){
          alert(data.message);
        }
        window.location.reload();
      });
    });
    $(function(){
      show_activities_for_project($('.group-project-select').val());
    });
