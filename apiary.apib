FORMAT: 1A
HOST: http://api.edx.org

# Open edX API
Open edX API is the machine interface for the world-reknowned MOOC platform.


## Allowed HTTP/S requests:
* <code>POST</code> - To create or update a resource
* <code>GET</code> - To retrieve a resource or list of resources
* <code>DELETE</code> - To delete/inactivate a resource

## Description Of Usual Server Responses
* <code>200 OK</code> - GET - the request was successful, an existing resource is returned
* <code>201 Created</code> - POST - the request was successful, a new resource is created and returned
* <code>204 No Content</code> - DELETE - the request was successful, an existing resource is removed
* <code>401 Unauthorized</code> - POST - authentication failed, or user lacks permission to execute the requested operation.
* <code>403 Forbidden</code> - POST - authentication succesful, but user is inactive
* <code>404 Not Found</code> - GET - no existing resource matches the provided identifier
* <code>405 Method Not Allowed</code> - POST/GET/DELETE - requested method is not supported for resource.
* <code>406 Not Acceptable</code> - POST - request syntax is correct, but semantic issue(s) were encountered.
* <code>409 Conflict</code> - POST - request conflicts with existing system state (e.g., duplicate resource).

409 Conflicts arise during POST operations due to duplicate requests against constrained entities.  An additional set of elements is included in the response:
    {
        . . .
        "message":"Information related to the conflict.",
        "field_conflict":"fieldname"
    }

## Group API
The API root is the top-level resource for Open edX, providing listings of the primary entity collections currently present in the system.

### GET /api
+ Response 200 (application/json)

    + Body

            {

                "documentation": "http://docs.openedxapi.apiary.io",
                "name": "Open edX API",
                "uri": "http://openedxapi.apiary-mock.com/api/",
                "description": "Machine interface for interactions with Open edX.",
                "resources": [
                    {
                        "uri": "http://openedxapi.apiary-mock.com/api/courses"
                    },
                    {
                        "uri": "http://openedxapi.apiary-mock.com/api/groups"
                    },
                    {
                        "uri": "http://openedxapi.apiary-mock.com/api/sessions"
                    },
                    {
                        "uri": "http://openedxapi.apiary-mock.com/api/system"
                    },
                    {
                        "uri": "http://openedxapi.apiary-mock.com/api/users"
                    }
                ]
            }


## Group Courses

### GET /api/courses
+ Response 200

    + Body

            [
                {
                    "category": "course",
                    "name": "edX Demonstration Course",
                    "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course",
                    "number": "Open_DemoX",
                    "org": "edX",
                    "id": "edX/Open_DemoX/edx_demo_course"
                },
                {
                    "category": "course",
                    "name": "edX Demonstration Course 2",
                    "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course2",
                    "number": "Open_DemoX2",
                    "org": "edX",
                    "id": "edX/Open_DemoX/edx_demo_course2"
                }

            ]

### GET /api/courses/{course_id}
+ Response 200

    + Body

            {
                "category": "course",
                "name": "edX Demonstration Course",
                "content": [
                    {
                        "category": "chapter",
                        "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/chapter/d8a6192ade314473a78242dfeedfbf5b",
                        "id": "i4x://edX/Open_DemoX/chapter/d8a6192ade314473a78242dfeedfbf5b",
                        "name": "Introduction"
                    },
                    {
                        "category": "chapter",
                        "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/chapter/interactive_demonstrations",
                        "id": "i4x://edX/Open_DemoX/chapter/interactive_demonstrations",
                        "name": "Example Week 1: Getting Started"
                    },
                    {
                        "category": "chapter",
                        "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/chapter/graded_interactions",
                        "id": "i4x://edX/Open_DemoX/chapter/graded_interactions",
                        "name": "Example Week 2: Get Interactive"
                    },
                    {
                        "category": "chapter",
                        "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/chapter/social_integration",
                        "id": "i4x://edX/Open_DemoX/chapter/social_integration",
                        "name": "Example Week 3: Be Social"
                    },
                    {
                        "category": "chapter",
                        "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/chapter/1414ffd5143b4b508f739b563ab468b7",
                        "id": "i4x://edX/Open_DemoX/chapter/1414ffd5143b4b508f739b563ab468b7",
                        "name": "About Exams and Certificates"
                    }
                ],
                "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course",
                "number": "Open_DemoX",
                "org": "edX",
                "id": "edX/Open_DemoX/edx_demo_course"
            }

### GET /api/courses/{course_id}/content/{module_id}
+ Response 200

    + Body

            {
                "category": "chapter",
                "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/chapter/d8a6192ade314473a78242dfeedfbf5b",
                "content": [
                    {
                        "category": "sequential",
                        "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/sequential/edx_introduction",
                        "id": "i4x://edX/Open_DemoX/sequential/edx_introduction",
                        "name": "Demo Course Overview"
                    }
                ],
                "id": "i4x://edX/Open_DemoX/chapter/d8a6192ade314473a78242dfeedfbf5b",
                "name": "Introduction"
            }

### GET /api/courses/{course_id}/content/{module_id}/subcontent{?type}
+ Parameters
    + type (optional, string) ... module category filter
+ Response 200

    + Body

            [
                {
                    "category": "html",
                    "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/html/030e35c4756a4ddc8d40b95fbbfff4d4",
                    "id": "i4x://edX/Open_DemoX/html/030e35c4756a4ddc8d40b95fbbfff4d4",
                    "name": "Blank HTML Page"
                },
                {
                    "category": "video",
                    "uri": "http://openedxapi.apiary-mock.com/api/courses/edX/Open_DemoX/edx_demo_course/content/i4x://edX/Open_DemoX/video/0b9e39477cf34507a7a48f74be381fdd",
                    "id": "i4x://edX/Open_DemoX/video/0b9e39477cf34507a7a48f74be381fdd",
                    "name": "Welcome!"
                }
            ]

### GET /api/courses/{course_id}/overview{?parse}
+ Parameters
    + parse (optional, boolean) ... whether to returned a parsed dataset of the Course Overview HTML content
+ Response 200 (application/json)

    + Body
    
            {
                "sections": [
                    {
                        "class": "about",
                        "body": "<h2>About This Course</h2>\n  <p>Include your long course description here. The long course description should contain 150-400 words.</p>\n\n  <p>This is paragraph 2 of the long course description. Add more paragraphs as needed. Make sure to enclose them in paragraph tags.</p>\n"
                    },
                    {
                        "class": "prerequisites",
                        "body": "<h2>Prerequisites</h2>\n  <p>Add information about course prerequisites here.</p>\n"
                    },
                    {
                        "class": "course-staff",
                        "articles": [
                            {
                                "class": "teacher",
                                "name": "Staff Member #1",
                                "image_src": "/static/images/pl-faculty.png",
                                "bio": "<p>Biography of instructor/staff member #1</p>\n "
                            },
                            {
                                "class": "teacher",
                                "name": "Staff Member #2",
                                "image_src": "/static/images/pl-faculty.png",
                                "bio": "<p>Biography of instructor/staff member #2</p>\n "
                            }
                        ]
                    },
                    {
                        "class": "faq",
                        "body": "<p>HTML in this section</p>"
                    }
                ]
            }

### GET /api/courses/{course_id}/static_tabs{?detail}
+ Parameters
    + detail (optional, boolean) ... whether to return the HTML content in each of the static tabs
+ Response 200 (application/json)
    + Body

            {
                "tabs": [
                    {
                        "id": "01356a17b5924b17a04b7fc2426a3798",
                        "name": "Syllabus",
                        "content": "<p>HTML in the tab</p>"
                    },
                    {
                        "id": "57e9991c0d794ff58f7defae3e042e39",
                        "name": "Advice for Participants",
                        "content": "<p>HTML in the tab</p>"
                    }
                ]
            }

### GET /api/courses/{course_id}/static_tabs/{tab_id}
+ Response 200 (application/json)
    + Body

            {
                "id": "01356a17b5924b17a04b7fc2426a3798",
                "name": "Syllabus",
                "content": "<p>The HTML content for the tab </p>"
            }

### GET /api/courses/{course_id}/updates{?parse}
+ Parameters
    + parse (optional, boolean) ... whether parse out the individual update posts
+ Response 200 (application/json)
    + Body

            {
                "postings": [
                    {
                        "date": "August 8, 2013",
                        "content": "<p>First posting HTML</p>"
                    },
                    {
                        "date": "July 29, 2013",
                        "content": "<p>Second posting HTML</p>"
                    }
                ]
            }

### GET /api/courses/{course_id}/users

+ Response 200 (application/json)
    + Body

            {
                "enrollments": [
                    {
                        "id": 1,
                        "email": "registered_user@edx.org",
                        "username": "registered_user"
                    },
                    {
                        "id": 2,
                        "email": "second_user@edx.org",
                        "username": "second_user"
                    },
                    {
                        "id": 1,
                        "email": "cdodge@edx.org",
                        "username": "cdodge"
                    },
                    {
                        "id": 9,
                        "email": "cdodge+student2@edx.org",
                        "username": "cdodge_student2"
                    }
                ],
                "pending_enrollments": [
                    "not_registered_user@edx.org"
                ]
            }

### POST /api/courses/{course_id}/users
+ Request (application/json)
    + Body

            {
                "email": "registered_user@edx.org"
            }

+ Response 204

## Group Groups


### GET /api/groups{?type}
+ Parameters
    + parse (required, string) ... what group types to query

+ Response 200 (application/json)
    + Body

            [
                {
                    "name": "first_series",
                    "id":1234,
                    "uri": "http://openedxapi.apiary-mock.com/api/users/14/groups/1234",
                    "group_type": "series",
                    "data": {
                        "display_name": "My first series"
                    }
                },
                {
                    "name": "second_series",
                    "id":1357,
                    "uri": "http://openedxapi.apiary-mock.com/api/users/14/groups/1357",
                    "group_type": "series",
                    "data": {
                        "display_name": "My second series"
                    }
                },
                {
                    "name": "super_admin",
                    "id":1237,
                    "uri": "http://openedxapi.apiary-mock.com/api/users/14/groups/1237",
                    "group_type": "permissions",
                    "data": {
                        "display_name": "Admin Permissions group"
                    }
                }
            ]


### POST /api/groups
+ Request (application/json)

    + Body

            {
                "name": "Alpha Group",
                "group_type": "company",
                "data": {
                    "display_name": "Alpha Group Users"
                }
            }

+ Response 201 (application/json)

    + Body

            {
                "name": "Alpha Group",
                "id": 98734,
                "uri": "http://openedxapi.apiary-mock.com/api/groups/2468",
                "group_type": "company",
                "data": {
                    "display_name": "Alpha Group Users"
                }
            }

### GET /api/groups/{group_id}
+ Response 200 (application/json)

    + Body

            {
                "name": "Alpha Group",
                "id": 98734,
                "uri": "http://openedxapi.apiary-mock.com/api/groups/2468",
                "resources":
                [
                    { "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/users" },
                    { "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/groups" }
                ]
            }

### DELETE /api/groups/{group_id}
+ Response 204



### POST /api/groups/{group_id}/groups
+ Request (application/json)

    + Body

            {
                "group_id": 9876
            }

+ Response 201 (application/json)

    + Body

            {
                "from_group_id": 2468,
                "to_group_id": 9876,
                "relationship_type":"h|g",
                "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/groups/9876"
            }

### GET /api/groups/{group_id}/groups
+ Response 200 (application/json)

    + Body

            [
                {
                    "id":9876,
                    "relationship_type":"h|g",
                    "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/groups/9876"
                }
            ]

### GET /api/groups/{from_group_id}/groups/{to_group_id}
+ Response 200 (application/json)

    + Body

            {
                "from_group_id":2468,
                "to_group_id": 9876,
                "relationship_type":"h|g",
                "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/groups/9876"
            }

### DELETE /api/groups/{from_group_id}/groups/{to_group_id}
+ Response 204



### POST /api/groups/{group_id}/users
+ Request (application/json)

    + Body

            {
                "user_id": 14
            }

+ Response 201 (application/json)

    + Body

            {
                "group_id": 2468,
                "user_id": 14,
                "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/users/14"
            }

### GET /api/groups/{group_id}/users/{user_id}
+ Response 200 (application/json)

    + Body

            {
                "group_id": 2468,
                "user_id": 14,
                "uri": "http://openedxapi.apiary-mock.com/api/groups/2468/users/14"
            }

### DELETE /api/groups/{group_id}/users/{user_id}
+ Response 204



## Group Sessions

### POST /api/sessions/
+ Request (application/json)

    + Body

            {
                "username": "TestUser",
                "password": "testpass"
            }

+ Response 201 (application/json)

    + Body

            {
                "token": "71b2485519a7b8cbe0c425b4b93b957d",
                "expires": 1209600,
                "user": {
                    "id": 10,
                    "email": "testuser@edx.org",
                    "username": "TestUser"
                },
                "uri":"http://openedxapi.apiary-mock.com/api/sessions/71b2485519a7b8cbe0c425b4b93b957d"
            }


### GET /api/sessions/{token}
+ Response 200 (application/json)

    + Body

            {
                "token": "71b2485519a7b8cbe0c425b4b93b957d",
                "expires": 1209600,
                "uri": "http://openedxapi.apiary-mock.com/api/sessions/71b2485519a7b8cbe0c425b4b93b957d",
                "id": 10
            }


### DELETE /api/sessions/{token}
+ Response 204


## Group System

### GET /api/system
+ Response 200 (application/json)

    + Body

            {
                "documentation": "http://docs.openedxapi.apiary.io/#get-%2Fapi%2Fsystem",
                "name": "Open edX System API",
                "uri": "http://openedxapi.apiary-mock.com/api/system",
                "description": "System interface for managing groups, users, and sessions."
            }


## Group Users

### POST /api/users
+ Request (application/json)

    + Body

            {
                "username": "testuser",
                "first_name": "Test",
                "last_name": "User",
                "email": "testuser@test.com"
            }

+ Response 201 (application/json)

    + Body

            {
                "email": "testuser@test.com",
                "first_name": "Test",
                "id": 14,
                "last_name": "User",
                "uri": "http://openedxapi.apiary-mock.com/api/users/14",
                "username": "testuser"
            }

### GET /api/users/{user_id}
+ Response 200 (application/json)

    + Body

            {
                "email": "testuser@test.com",
                "first_name": "Test",
                "id": 14,
                "last_name": "User",
                "uri": "http://openedxapi.apiary-mock.com/api/users/14",
                "username": "testuser",
                "resources":
                [
                    { "uri": "http://openedxapi.apiary-mock.com/api/users/1/groups" }
                ]
            }


### DELETE /api/users/{user_id}
+ Response 204

### GET /api/users/{user_id}/courses
+ Response 200

    + Body

            [
                {
                    "is_active": true,
                    "id": "edX/Open_DemoX/edx_demo_course",
                    "name": "edX Demonstration Course",
                    "uri": "http://openedxapi.apiary-mock.com/api/users/3/courses/edX/Open_DemoX/edx_demo_course"
                },
                {
                    "is_active": true,
                    "id": "edX/Open_DemoX/edx_demo_course2",
                    "name": "edX Demonstration Course 2",
                    "uri": "http://openedxapi.apiary-mock.com/api/users/3/courses/edX/Open_DemoX/edx_demo_course2"
                }
            ]

### POST /api/users/{user_id}/courses
+ Request (application/json)

    + Body

            {
                "course_id": "edX/Open_DemoX/edx_demo_course",
            }

+ Response 201 (application/json)

    + Body

            {
                "is_active": true,
                "uri": "http://openedxapi.apiary-mock.com/api/users/3/courses/edX/Open_DemoX/edx_demo_course",
                "name": "edX Demonstration Course",
                "id": "edX/Open_DemoX/edx_demo_course"
            }



### POST /api/users/{user_id}/courses/{course_id}
+ Request (application/json)

    + Body

            {
                "position": {
                    "parent_module_id": "edX/Open_DemoX/edx_demo_course",
                    "child_module_id": "i4x://edX/Open_DemoX/chapter/d8a6192ade314473a78242dfeedfbf5b"
                }
            }

+ Response 201 (application/json)

    + Body

            {
                "course_id": "edX/Open_DemoX/edx_demo_course",
                "position": 2,
                "user_id": 3,
                "uri": "http://openedxapi.apiary-mock.com/api/users/3/courses/edX/Open_DemoX/edx_demo_course"
            }


### DELETE /api/users/{user_id}/courses/{course_id}
+ Response 204


### POST /api/users/{user_id}/groups
+ Request (application/json)

    + Body

            {
                "group_id": "2468"
            }

+ Response 201 (application/json)

    + Body

            {
                "group_id": 2468,
                "uri": "http://openedxapi.apiary-mock.com/api/users/14/groups/2468",
                "id":14
            }


### GET /api/users/{user_id}/groups/{group_id}
+ Response 200 (application/json)

    + Body

            {
                "group_id":2468,
                "uri": "http://openedxapi.apiary-mock.com/api/users/14/groups/2468",
                "id":14
            }


### DELETE /api/users/{user_id}/groups/{group_id}
+ Response 204

### GET /api/admin/programs/{program_id}
+ Response 200 (application/json)

    + Body

            {
                "id": 4567,
                "name": "edX Humanities Program",
                "private_name": "edX Humanities X-Series",
                "start_date": "2014-05-01T00:00:00.00Z",
                "end_date": "2014-12-12T00:00:00.00Z"
            }

### DELETE /api/admin/programs/{program_id}
+ Response 204

### POST /api/admin/programs/
+ Request (application/json)

    + Body

            {
                "name": "edX Humanities Program",
                "private_name": "edX Humanities X-Series",
                "start_date": "2014-05-01T00:00:00.00Z",
                "end_date": "2014-12-12T00:00:00.00Z"
            }

+ Response 201 (application/json)

    + Body

            {
                "id": 4567,
                "name": "edX Humanities Program",
                "private_name": "edX Humanities X-Series",
                "start_date": "2014-05-01T00:00:00.00Z",
                "end_date": "2014-12-12T00:00:00.00Z"
            }

### GET /api/admin/programs
+ Response 200 (application/json)

    + Body

            [
                {
                    "id": 4567,
                    "name": "edX Humanities Program",
                    "private_name": "edX Humanities X-Series",
                    "start_date": "2014-05-01T00:00:00.00Z",
                    "end_date": "2014-12-12T00:00:00.00Z"
                },
                {
                    "id": 5678,
                    "name": "edX Mathematics Program",
                    "private_name": "edX Mathematics X-Series",
                    "start_date": "2014-05-01T00:00:00.00Z",
                    "end_date": "2014-12-12T00:00:00.00Z"
                },
                {
                    "id": 6789,
                    "name": "edX Science Program",
                    "private_name": "edX Science X-Series",
                    "start_date": "2014-05-01T00:00:00.00Z",
                    "end_date": "2014-12-12T00:00:00.00Z"
                },
                {
                    "id": 7890,
                    "name": "edX Legal Program",
                    "private_name": "edX Legal X-Series",
                    "start_date": "2014-05-01T00:00:00.00Z",
                    "end_date": "2014-12-12T00:00:00.00Z"
                }
            ]
