- extends "layout.haml"
- load i18n
- comment "This template is used /accounts/activate (normal registration)"

- block page_title
  %title {% trans "Register | McKinsey Academy" %}

- block header
  - include 'accounts/login_header.haml'

- block content
  .container.activation
    .row.justify-content-center
      .col-lg-7.col-md-12.form.border-top-main
        %h4 {% trans "Create your McKinsey Academy account" %}
        %form#reg{action: "", method: "POST", :autocomplete => "off"}
          - csrf_token
          .form-group
            %input.form-control{:disabled => "disabled", :placeholder => "{{user.email}}", :type => "text"}
          .form-group
            %input.form-control{:disabled => "disabled", :placeholder => "{{user.full_name}}", :type => "text"}
          - if not registration
            .form-group
              %input.form-control{:disabled => "disabled", :placeholder => "{{company}}", :type => "text"}
          .form-group.mt-30.position-relative{:class => "{% if username_error %}error{% endif %}"}
            %label{:class => "form-label" , :for => "setUsername"}
              {% trans "Username" %}
            %input.form-control.form-input{:type => "text", :tabindex => "1", :autocomplete => "false", :id => "setUsername", :name => "username", :value => "{{form.data.username}}"}
              %i.material-icons.ico-state
                error
              - if username_error
                %small.error.form-text= username_error
              %small.form-text {% trans "This cannot be changed later and cannot contain non-English characters." %}

          .form-group.mt-4.password{:class => "{% if errors.password %}error{% endif %}"}
            %label{:class => "form-label" , :for => "setPassword"}
              {% trans "Password" %}
            %input#password.form-control.form-input{:name => "password", :type => "password" , :id => "setPassword", :tabindex => "2", :value => "{{form.data.password}}"}
            %i#show-hide.material-icons{"data-container": "body", "data-content": "Show Password", "data-placement": "bottom", "data-toggle": "popover", "data-trigger": "hover"} visibility_off
            %i.material-icons.ico-state
              error
            %small.form-text {% trans "Must be at least 8 characters and include upper and lowercase letters - plus numbers OR special characters." %}
          .form-group.form-check.mt-4.agreement{:class => "{% if errors.accept_terms %}error{% endif %}"}
            %label.form-check-label{:for => "agree"}
              %input#agree.form-check-input{:type => "checkbox", :name => "accept_terms"}
                %span.checkmark
                {% blocktrans %}
                I agree to the
                %a{:href => "/terms/", :target => "_blank"} Terms of Service
                and
                %a{:href => "/privacy/", :target => "_blank"} Privacy Policy
                {% endblocktrans %}
          %button.btn.btn-primary.btn-lg.mt-3.registration_submit{:type => "submit", :disabled => "disabled"} {% trans "Register" %}
          .form-footer
            %ul.nav
              %li.nav-item
                {% trans "Need help?" %}
              %li.nav-item
                %a.nav-link{:href => "/faq/", :target => "_blank"} {% trans "Read FAQs" %}
              %li.nav-item
                %a.nav-link{:href => "mailto:support@mckinseyacademy.com"} {% trans "Email Support" %}


- block js_snippets
  :javascript
    $('#reg').submit(function(event) {
      let sel = $('[name="username"]');
      sel.siblings('.error').remove();
      let value = sel.val();

      if(value === undefined || value.length === 0){
        sel.parent().addClass('error');
        sel.after('<small class="error form-text">{% trans "This field is required." %}</small>');
        event.preventDefault();
        return;
      }
      if(! /^([a-zA-Z0-9]*)$/.test(value)){
        sel.parent().addClass('error');
        sel.after('<small class="error form-text">{% trans "Please enter a valid username." %}</small>');
        event.preventDefault();
        return;
      }

      sel = $('[name="password"]');
      sel.siblings('.error').remove();
      value = sel.val();
      if(value === undefined || value.length === 0){
        sel.parent().addClass('error');
        sel.after('<small class="error form-text">{% trans "This field is required." %}</small>');
        event.preventDefault();
        return;
      }

      if(! /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(value)){
        sel.parent().addClass('error');
        sel.after('<small class="error form-text">{% trans "Must be at least 8 characters and include upper and lowercase letters - plus numbers OR special characters." %}</small>');
        event.preventDefault();
        return;
      }

      sel = $('[name="accept_terms"]');
      sel.siblings('.error').remove();
      if(!sel.is(":checked")){
        sel.parents('.form-group').addClass('error');
        sel.siblings(":last").after('<small class="error form-text">{% trans "You must accept terms of service in order to continue." %}</small>');
        event.preventDefault();
        return;
      }
    });

    $('select, input').on('change', function(e) {
      $('.registration_submit').attr('disabled',false);
      $(this).parent().removeClass('error');
      $(this).siblings('.error').remove();
    });
